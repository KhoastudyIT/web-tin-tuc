#!/usr/bin/env python3
"""
Script s·ª≠a c·∫•u tr√∫c database MySQL
Ch·∫°y: python backend/fix_database.py
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import engine
from sqlalchemy import text

def fix_database_structure():
    """S·ª≠a c·∫•u tr√∫c database"""
    
    print("üîß ƒêang s·ª≠a c·∫•u tr√∫c database...")
    
    try:
        with engine.connect() as connection:
            # S·ª≠a b·∫£ng users
            print("\nüìù S·ª≠a b·∫£ng users...")
            try:
                connection.execute(text("""
                    ALTER TABLE users 
                    ADD COLUMN updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
                """))
                print("‚úÖ ƒê√£ th√™m c·ªôt updated_at v√†o b·∫£ng users")
            except Exception as e:
                if "Duplicate column name" in str(e):
                    print("‚ÑπÔ∏è  C·ªôt updated_at ƒë√£ t·ªìn t·∫°i trong b·∫£ng users")
                else:
                    print(f"‚ö†Ô∏è  L·ªói khi th√™m c·ªôt updated_at: {e}")
            
            try:
                connection.execute(text("""
                    ALTER TABLE users 
                    ADD COLUMN full_name VARCHAR(255) NOT NULL DEFAULT 'Unknown User'
                """))
                print("‚úÖ ƒê√£ th√™m c·ªôt full_name v√†o b·∫£ng users")
            except Exception as e:
                if "Duplicate column name" in str(e):
                    print("‚ÑπÔ∏è  C·ªôt full_name ƒë√£ t·ªìn t·∫°i trong b·∫£ng users")
                else:
                    print(f"‚ö†Ô∏è  L·ªói khi th√™m c·ªôt full_name: {e}")
            
            # S·ª≠a b·∫£ng news_categories
            print("\nüìù S·ª≠a b·∫£ng news_categories...")
            try:
                connection.execute(text("""
                    ALTER TABLE news_categories 
                    ADD COLUMN is_active BOOLEAN DEFAULT TRUE
                """))
                print("‚úÖ ƒê√£ th√™m c·ªôt is_active v√†o b·∫£ng news_categories")
            except Exception as e:
                if "Duplicate column name" in str(e):
                    print("‚ÑπÔ∏è  C·ªôt is_active ƒë√£ t·ªìn t·∫°i trong b·∫£ng news_categories")
                else:
                    print(f"‚ö†Ô∏è  L·ªói khi th√™m c·ªôt is_active: {e}")
            
            try:
                connection.execute(text("""
                    ALTER TABLE news_categories 
                    ADD COLUMN updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
                """))
                print("‚úÖ ƒê√£ th√™m c·ªôt updated_at v√†o b·∫£ng news_categories")
            except Exception as e:
                if "Duplicate column name" in str(e):
                    print("‚ÑπÔ∏è  C·ªôt updated_at ƒë√£ t·ªìn t·∫°i trong b·∫£ng news_categories")
                else:
                    print(f"‚ö†Ô∏è  L·ªói khi th√™m c·ªôt updated_at: {e}")
            
            # S·ª≠a b·∫£ng news_items
            print("\nüìù S·ª≠a b·∫£ng news_items...")
            try:
                connection.execute(text("""
                    ALTER TABLE news_items 
                    ADD COLUMN updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
                """))
                print("‚úÖ ƒê√£ th√™m c·ªôt updated_at v√†o b·∫£ng news_items")
            except Exception as e:
                if "Duplicate column name" in str(e):
                    print("‚ÑπÔ∏è  C·ªôt updated_at ƒë√£ t·ªìn t·∫°i trong b·∫£ng news_items")
                else:
                    print(f"‚ö†Ô∏è  L·ªói khi th√™m c·ªôt updated_at: {e}")
            
            # Commit thay ƒë·ªïi
            connection.commit()
            print("\n‚úÖ ƒê√£ commit thay ƒë·ªïi v√†o database")
            
    except Exception as e:
        print(f"‚ùå L·ªói khi s·ª≠a database: {e}")
        return False
    
    return True

def main():
    """Main function"""
    
    print("üîß FIX DATABASE STRUCTURE")
    print("=" * 50)
    
    if fix_database_structure():
        print("\nüéâ HO√ÄN TH√ÄNH! Database ƒë√£ ƒë∆∞·ª£c s·ª≠a!")
        print("\nüöÄ B√¢y gi·ªù b·∫°n c√≥ th·ªÉ:")
        print("   1. Ch·∫°y test database: python test_database.py")
        print("   2. Ch·∫°y backend: python run.py")
    else:
        print("\n‚ùå Kh√¥ng th·ªÉ s·ª≠a database!")

if __name__ == "__main__":
    main()
